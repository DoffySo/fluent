import { deriveSharedSecret, generateKeyExchangePair } from "./key-exchange";

export async function initiateCall() {
    const myKeys = generateKeyExchangePair();
    const peerPublicKey = await getPeerPublicKey();

    const sharedSecret = deriveSharedSecret(myKeys.privateKey, peerPublicKey);
    console.log("üîê –û–±—â–∏–π —Å–µ–∫—Ä–µ—Ç –¥–ª—è –∑–≤–æ–Ω–∫–∞:", sharedSecret);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ WebRTC —Å–∏–≥–Ω–∞–ª–∏–Ω–≥-—Å–µ—Ä–≤–µ—Ä)
async function getPeerPublicKey(): Promise<Uint8Array> {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä
    return new Uint8Array();
}
