generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                      String  @id @default(uuid())
  firstName               String?
  lastName                String?
  email                   String  @unique
  username                String? @unique
  phone                   String? @unique
  passwordHash            String
  encryptedPhraseToVerify String? // This field contains the encrypted phrase. For example, we encrypt the text “hello” with the user's public and private keys.
  encryptedPhraseNonce    String? @default("")
  publicKey               String? @default("")

  // Realtions.
  Session              Session[]
  ChatParticipant      ChatParticipant[]
  ownedChats           Chat[]            @relation(name: "ChatOwner")
  // some useless info xd
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ChatMessages    ChatMessages[]
  MessageRead     MessageRead[]
}

model Chat {
  id String @id @default(uuid())

  participants ChatParticipant[]
  type         ChatTypes         @default(private)

  ownerId String
  owner   User   @relation("ChatOwner", fields: [ownerId], references: [id])

  title            String?

  // some useless info xd
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ChatMessages    ChatMessages[]
  MessageRead     MessageRead[]
}

model ChatParticipant {
  id         String  @id @default(uuid())
  chat       Chat    @relation(fields: [chatId], references: [id])
  chatId     String
  user       User    @relation(fields: [userId], references: [id])
  userId     String

  // some useless info xd
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //

  @@unique([chatId, userId])
}

model ChatMessages {
  id     String @id @default(uuid())
  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  message         String
  ogMessage       String?
  pinned          Boolean?
  messageNonce    String            @default("")
  editedAt        DateTime?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  MessageRead     MessageRead[]
}

model MessageRead {
  id        String       @id @default(uuid())
  chat      Chat         @relation(fields: [chatId], references: [id])
  chatId    String
  user      User         @relation(fields: [userId], references: [id])
  userId    String
  message   ChatMessages @relation(fields: [messageId], references: [id], onDelete: Cascade)
  messageId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([messageId, userId])
}


model Session {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  sessionToken String   @unique
  createdAt    DateTime @default(now())
  expiresAt    DateTime
}

enum ChatTypes {
  private
  group
  channel
}
